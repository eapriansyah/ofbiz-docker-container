#!/bin/bash
###############################################################################
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
###############################################################################

FAKEROOT=fakeroot
DEBOOTSTRAP=/usr/sbin/debootstrap

set -x
case "$1" in
	(-cat)
		cat > "$2"
		exit
		;;

	(-fixlinks)
		PREFIX="$2"
		shift 2
		while [[ $# -gt 0 ]]; do
			file="$1"
			shift
			link_target="$(readlink "$file")"
			[[ $link_target =~ ^"$PREFIX"(.*)$ ]] || continue
			rm "$file"
			ln -sf "${BASH_REMATCH[1]}" "$file"
		done
		exit
		;;

	(-postsetup)
		DIST="$2"
		shift 2
		/bin/sh /debootstrap/debootstrap --second-stage
		cat << _EOF_ > /etc/apt/sources.list
deb http://ftp.us.debian.org/debian/ $DIST main
deb http://ftp.us.debian.org/debian/ $DIST-updates main
deb http://security.debian.org/ $DIST/updates main
_EOF_
		rm /var/lib/apt/lists/* 2>/dev/null || true
		rm /var/lib/apt/* 2>/dev/null || true
		rm /var/cache/apt/archives/* 2>/dev/null || true
		rm /var/cache/apt/* 2>/dev/null || true
		rm "$0"
		exit
		;;

esac

DIST="$1"
TARGET="$2"
OUTPUT="$3"
shift 3

TMP_IMAGE=
TMP_CONTAINER=
_onexit() {
	[[ $TMP_CONTAINER ]] && docker rm -f "$TMP_CONTAINER"
	[[ $TMP_IMAGE ]] && docker rmi "$TMP_IMAGE"
}

trap _onexit EXIT

"$FAKEROOT" "$DEBOOTSTRAP" --foreign --variant=minbase "$DIST" "$TARGET"
"$FAKEROOT" mkdir -p "$TARGET/tmp"
"$FAKEROOT" cp "$0" "$TARGET/tmp"

find "$TARGET" -lname "$TARGET*" -print0 | xargs -0 "$0" -fixlinks "$TARGET"
TMP_IMAGE="$("$FAKEROOT" tar -C "$TARGET" -c . | docker import -)"
TMP_CONTAINER="$(docker create -ti "$TMP_IMAGE" /bin/bash "/tmp/$(basename "$0")" -postsetup "$DIST")"
docker start -ai "$TMP_CONTAINER"
docker stop "$TMP_CONTAINER"
docker export "$TMP_CONTAINER" > "$OUTPUT.new"
mv "$OUTPUT".new "$OUTPUT"

